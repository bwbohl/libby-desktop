name: Build with arch emulation

on: push

jobs:
  release:
    # The host should always be linux
    runs-on: ubuntu-22.04
    name: Build on ${{ matrix.distro }} ${{ matrix.arch }}

    strategy:
      matrix:
        include:
          - arch: armv7
            distro: ubuntu22.04
          #- arch: aarch64
          #  distro: bullseye 
          #- arch: ppc64le
          #  distro: alpine_latest
          #- arch: none
          #  distro: none
          #  base_image: riscv64/busybox

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v4

      #- name: Install Node.js, NPM and Yarn
      #  uses: actions/setup-node@v1
      #  with:
      #    node-version: 23

      - name: Build/release Electron app
        uses: uraimo/run-on-arch-action@v2
        #uses: jsoma/action-electron-forge@v1.4.0
        with:
          arch: ${{ matrix.arch }}
          distro: ${{ matrix.distro }}
          # GitHub token, automatically provided to the action
          # (No need to define this secret in the repo settings)
          githubToken: ${{ secrets.github_token }}

          # Create an artifacts directory
          setup: |
            mkdir -p "${PWD}/artifacts"

         # Mount the artifacts directory as /artifacts in the container
          dockerRunArgs: |
            --volume "${PWD}/artifacts:/artifacts"

          # Pass some environment variables to the container
          env: | # YAML, but pipe character is necessary
            artifact_name: libby-desktop_${{ matrix.distro }}_${{ matrix.arch }}

          # The shell to run commands with in the container
          shell: /bin/sh

                    # Install some dependencies in the container. This speeds up builds if
          # you are also using githubToken. Any dependencies installed here will
          # be part of the container image that gets cached, so subsequent
          # builds don't have to re-install them. The image layer is cached
          # publicly in your project's package repository, so it is vital that
          # no secrets are present in the container state or logs.
          install: |
            case "${{ matrix.distro }}" in
              ubuntu*|jessie|stretch|buster|bullseye)
                apt-get update -q -y
                apt-get install -q -y git nodejs
                ;;
              fedora*)
                dnf -y update
                dnf -y install git which
                ;;
              alpine*)
                apk update
                apk add git
                ;;
            esac
          
          # Produce a binary artifact and place it in the mounted volume
          run: |
            npm install
            npm run make
      - name: Show the artifact
        # Items placed in /artifacts in the container will be in
        # ${PWD}/artifacts on the host.
        run: |
          ls -la "${PWD}/out"
